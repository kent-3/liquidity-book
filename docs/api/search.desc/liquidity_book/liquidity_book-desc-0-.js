searchState.loadedDescShard("liquidity_book", 0, "Helper Libraries\nIn the process of being deprecated for …\nA contract that does not contain a validated address. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBeing deprecated in favor of <code>valid</code> which turns this into …\nValidates a vector of Strings as Addrs\npad the message to blocks of this size\npad the message to blocks of this size\npad the message to blocks of this size\nA trait marking types that define the handle message(s) of …\nA trait marking types that define the instantiation …\nA trait marking types that define the query message(s) of …\nReturns StdResult, where T is the type defining the query …\nReturns StdResult\nReturns StdResult\nPad the data and logs in a <code>Response</code> to the block size, …\nPad a <code>StdResult&lt;Binary&gt;</code> with spaces\nTake a Vec and pad it up to a multiple of <code>block_size</code>, …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLiquidity Book Flash Loan Callback Interface\nA thin wrapper around <code>ContractInfo</code> that provides additional\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA thin wrapper around <code>ContractInfo</code> that provides additional\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA thin wrapper around <code>ContractInfo</code> that provides additional\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA thin wrapper around <code>ContractInfo</code> that provides additional\nThe liquidity parameters, such as:\nThe path parameters, such as:\nThis enum represents the version of the pair requested\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nremember that price is a 128x128 fixed point number …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nreturns all token_id balances owned by an address. Only …\ndisplays all permissions that a given address has granted\nall permissions granted, viewable by the permission …\nreturns balance of a specific token_id. Owners can give …\nperforms <code>send</code> of multiple token_ids in a single transaction\nperforms <code>transfer</code>s of multiple token_ids in a single …\nburns existing tokens, if configuration allows this, ie …\nallows owner or minter to change metadata if allowed by …\nreturns public information of the SNIP1155 contract\nHandle answers in the <code>data</code> field of <code>HandleResponse</code>. See …\nHandle messages to SNIP1155 contract.\nallows an owner of token_ids to change transfer or …\nmints additional tokens of existing fungible token_ids, if …\nthe query responses for each QueryMsg variant\nQuery messages to SNIP1155 contract. See QueryAnswer for …\nreturns None if contract has not registered with SNIP1155 …\nPermanently breaks admin keys for this contract. No admin …\nRemoves all permissions that a specific owner has granted …\ndisallow the use of a query permit\nsimilar to transfer, but also sends a cosmos message. The …\nSnip1155ReceiveMsg should be de/serialized under …\nreturns contract-level information:\nall permissions related to a particular address. Note that …\ntransfers one or more tokens of a single token_id. Other …\nreturned when an viewing_key-specific errors occur during …\nif <code>admin</code> == <code>None</code> &amp;&amp; <code>has_admin</code> == <code>true</code>, the instantiator …\namount of tokens being transferred\nsets initial list of curators, which can create new …\nfor <code>create_viewing_key</code> function\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nthe previous owner of the tokens being transferred\nif <code>false</code> the contract will instantiate permanently as a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nserializes the message, and pads it to 256 bytes\ncreates a cosmos_msg sending this struct to the named …\noptional memo\noptional message\nthe address that sent the <code>Send</code> or <code>BatchSend</code> message\nunique token_id <code>String</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\naddress being granted/revoked permission\naddress which has permission\ntoken owner\noptional message length padding\ndoes not attempt to change if left blank. Can effectively …\ndoes not attempt to change if left blank. Can effectively …\ntoken id to apply approval/revocation to. Additional Spec …\nset allowance by for transfer approvals. If ignored, …\noptional permission level for viewing balance. If ignored, …\noptional permission level for viewing private metadata. If …\nthe list of all token_ids that have been curated\nthe list of curators in the contract\nif owner_is_public == false, total_supply = None\nif owner_is_public == false, total_supply = None\ntoken_id_info.private_metadata will always = None\nthe total number of permission entries stored for a given …\nif public_total_supply == false, total_supply = None\nif public_total_supply == false, total_supply = None\naddress that has granted permissions to others\nexpires at this block height\nexpires at the time in seconds since 01/01/1970\nat the given point in time and after, Expiration will be …\nnever expires\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns bool, true if Expiration has expired\nmedia file authentication\nmetadata extension You can add any metadata fields you …\nmedia file\ntoken metadata\nattribute trait\nurl to a multimedia attachment\nitem attributes\nauthentication information\nbackground color represented as a six-character …\nitem description\nindicates how a trait should be displayed\noptional on-chain metadata.  Only use this if you are not …\nfile extension\nurl to allow users to view the item on your site\nfile type Stashh currently uses: “image”, “video”, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nurl to the image\nraw SVG image data (not recommended). Only use this if you…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\neither a decryption key for encrypted files or a password …\noptional max value for numerical traits\nmedia files as specified on Stashh that allows for basic …\nname of the item\na select list of trait_types that are in the private …\ntoken subtypes used by Stashh for display groupings …\noptional uri for off-chain metadata.  This should be …\nname of the trait\nurl to the file.  Urls should be prefixed with <code>http://</code>, …\nusername used in basic authentication\ntrait value\nurl to a YouTube video\nstruct to store permission for a …\nto store all keys to access all permissions for a given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ncontract configuration, spanning all <code>token_ids</code> generated …\nmessage sent my instantiator and curators for a specific …\ninformation for a specific <code>token_id</code>\nConstructed from input enum <code>TknConfig</code>. Flattened for …\nused for MintToken and BurnToken in the base specifications\nmessage sent my instantiator and curators for a specific …\nFor BurnToken, <code>address</code> needs to be the owner’s address. …\nFor BurnToken, only <code>Balance.amount</code> is relevant. …\nThese are contract-level curators that can curate new …\nCombines variables in the TknConfig enum into a single …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ntx in storage\ntx type and specifics for storage\n<code>transfer</code> or <code>send</code> txs\n<code>transfer</code> or <code>send</code> txs\ntx in storage\ntx type and specifics for storage with Addr\ntx type and specifics\ntx type and specifics\nthe block containing this tx\nthe block containing this tx\nthe time (in seconds since 01/01/1970) of the block …\nthe time (in seconds since 01/01/1970) of the block …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\noptional memo\noptional memo\ntoken id\ntoken id\ntx id\ntx id\namount of tokens transferred\nin the base specification, the burner MUST be the owner. …\nprevious owner\nnew owner\noptional sender if not owner\namount of tokens transferred\nin the base specification, the burner MUST be the owner. …\nprevious owner\nnew owner\noptional sender if not owner\nLiquidity Book Bin Helper Library\nLiquidity Book Constants Library\nInternal function to decode a bytes32 sample using a mask …\nInternal function to decode a bytes32 sample into a bool …\nInternal function to decode a bytes32 sample into a uint12 …\nInternal function to decode a bytes32 sample into a …\nInternal function to decode a bytes32 sample into a uint14 …\nInternal function to decode a bytes32 sample into a uint16 …\nInternal function to decode a bytes32 sample into a uint20 …\nInternal function to decode a bytes32 sample into a uint24 …\nInternal function to decode a bytes32 sample into a uint40 …\nInternal function to decode a bytes32 sample into a uint64 …\nInternal function to decode a bytes32 sample into a uint8 …\nLiquidity Book Error Library\nLiquidity Book Fee Helper Library\nReturns the amount of tokens that will be received when …\nReturns the amounts of tokens that will be added and …\nReturns the composition fees when adding liquidity to the …\nReturns the amount of liquidity following the constant sum …\nReturns the share and the effective amounts in when adding …\nReturns whether the bin is empty (true) or not (false).\nLiquidity Book Math Libraries\nLiquidity Book Oracle Helper Library\nLiquidity Book Pair Parameter Helper Library\nLiquidity Book Price Helper Library\nReturns the encoded amounts that were transferred to the …\nReturns the encoded amounts that were transferred to the …\nReturns the encoded amounts that were transferred to the …\nInternal function to set a value in an encoded bytes32 …\nInternal function to set a bool in an encoded bytes32 …\nVerify that the amounts are correct and that the …\nReturns the argument unchanged.\nReturns the amount of tokens that will be received when …\nReturns the amounts of tokens that will be added and …\nReturns the composition fees when adding liquidity to the …\nReturns the amount of liquidity following the constant sum …\nReturns the share and the effective amounts in when adding …\nCalls <code>U::from(self)</code>.\nReturns whether the bin is empty (true) or not (false).\nReturns the encoded amounts that were transferred to the …\nReturns the encoded amounts that were transferred to the …\nReturns the encoded amounts that were transferred to the …\nVerify that the amounts are correct and that the …\nThe expected return after a successful flash loan\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTrait for fee-related operations\nReturns the argument unchanged.\nCalculates the composition fee amount from the amount with …\nCalculates the fee amount that will be charged, rounding …\nCalculates the fee amount from the amount with fees, …\nCalculates the protocol fee amount from the fee amount and …\nCalls <code>U::from(self)</code>.\nCheck that the fee is not too large.\nCheck that the protocol share is not too large.\n@dev Helper function to call the afterSwap function on the …\nHelper function to call the afterTransferFrom function on …\n@dev Helper function to call the beforeSwap function on …\nHelper function to call the beforeTransferFrom function on …\nConverts a hex-encoded code hash (SHA-256) into a Bytes32 …\n@dev Helper function to decode the hooks parameters from a …\n@dev Helper function to encode the hooks parameters to a …\nReturns the argument unchanged.\nReturns the argument unchanged.\n@dev Helper function to get the flags from the encoded …\n@dev Helper function to get the hooks address from the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n@dev Helper function call the onHooksSet function on the …\n@dev Helper function to set the hooks address in the …\nLiquidity Book Bit Math Library\nLiquidity Book Encoded Library\nLiquidity Book Liquidity Configurations Library\nLiquidity Book Tree Math Library\nLiquidity Book Sample Math Library\nLiquidity Book Tree Math Library\nLiquidity Book U128x128 Math Library\nLiquidity Book u24 Library\nLiquidity Book U256x256 Math Library\nLiquidity Book ConvertUint256 Math Library\nReturns the index of the closest bit on the left of x that …\nReturns the index of the closest bit on the right of x …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the index of the least significant bit of x.\nReturns the index of the most significant bit of x.\n@dev Decode the distributionX, distributionY and id from a …\n@dev Encode the distributionX, distributionY and id into a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the amounts and id from a config and amounts_in.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdds two <code>Bytes32</code> values encoded as follows:\nAdds a <code>Bytes32</code> value encoded as follows:\nDecodes a <code>Bytes32</code> value into two <code>u128</code> values as follows:\nDecodes a <code>Bytes32</code> value into a <code>u128</code> value as the first or …\nDecodes a <code>Bytes32</code> value into a <code>u128</code> value as the first …\nDecodes a <code>Bytes32</code> value into a <code>u128</code> value as the second …\nEncodes two <code>u128</code> values into a single <code>Bytes32</code> value, with …\nEncodes a <code>u128</code> value into a single <code>Bytes32</code> value, with the …\nEncodes a <code>u128</code> value into a single <code>Bytes32</code> value, with the …\nEncodes a <code>u128</code> value into a single <code>Bytes32</code> value, with the …\nReturns the argument unchanged.\nReturns whether any of the u128 of x is strictly greater …\nCalls <code>U::from(self)</code>.\nReturns whether any of the u128 of x is strictly less than …\nMultiplies an encoded Bytes32 by a u128 then divides the …\nSubtracts two <code>Bytes32</code> values encoded as follows:\nSubtracts a <code>Bytes32</code> value encoded as follows:\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEncodes a sample.\nReturns the argument unchanged.\nGets the cumulative bin crossed from an encoded sample.\nGets the cumulative id from an encoded sample.\nGets the cumulative volatility accumulator from an encoded …\nGets the oracle length from an encoded sample.\nGets the sample creation timestamp from an encoded sample.\nGets the sample last update timestamp from an encoded …\nGets the sample lifetime from an encoded sample.\nGets the weighted average of two samples and their …\nCalls <code>U::from(self)</code>.\nUpdates a sample with the given values.\nCan store 256^3 = 2^24 = 16,777,216 values. Each bit …\nHelper function: finds the first bit in the given <code>leaves</code> …\nHelper function: finds the first bit in the given <code>leaves</code> …\nAdds the given <code>id</code> to the tree.\nChecks if the tree contains the given <code>id</code>.\nFinds the first <code>id</code> in the tree that is greater than or …\nFinds the first <code>id</code> in the tree that is less than or equal …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new empty TreeUint24.\nRemoves the given <code>id</code> from the tree.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalculates the binary logarithm of x.\nReturns the value of x^y. It calculates <code>1 / x^abs(y)</code> if x …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHelper function to return the result of <code>x * y / denominator</code>…\nHelper function to return the result of <code>x * y</code> as 2 U256\nComputes (x + y) % k where the addition is performed with …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nComputes (x * y) % k where the multiplication is performed …\nThis represents a fixed-size storage for 65535 samples, …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the active index from the encoded pair parameters.\nGet the base factor from the encoded pair parameters.\nCalculates the base fee, with 18 decimals.\nGet the decay period from the encoded pair parameters.\nGet the delta between the current active index and the …\nGet the filter period from the encoded pair parameters.\nGet the index reference from the encoded pair parameters.\nGet the max volatility accumulator from the encoded pair …\nGet the oracle id from the encoded pair parameters.\nGet the protocol share from the encoded pair parameters.\nGet the reduction factor from the encoded pair parameters.\nGet the time of last update from the encoded pair …\nCalculates the total fee, which is the sum of the base fee …\nCalculates the variable fee.\nGet the variable fee control from the encoded pair …\nGet the volatility accumulator from the encoded pair …\nGet the volatility reference from the encoded pair …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the active id in the encoded pair parameters.\nSet the oracle id in the encoded pair parameters.\nSets the static fee parameters in the encoded pair …\nSet the volatility accumulator in the encoded pair …\nSet the volatility reference in the encoded pair …\nUpdates the index reference in the encoded pair parameters.\nUpdates the volatility reference and the volatility …\nUpdates the time of last update in the encoded pair …\nUpdates the volatility accumulator in the encoded pair …\nUpdates the volatility reference and the volatility …\nUpdates the volatility reference in the encoded pair …\nConverts a 128.128-binary fixed-point number to a price …\nConverts a price with 18 decimals to a 128.128-binary …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalculates the base from the bin step, which is …\nCalculates the exponent from the id, which is …\nCalculates the id from the price and the bin step.\nCalculates the price as a 128.128-binary fixed-point number\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")