searchState.loadedDescShard("lb_factory", 0, "Liquidity Book Factory\nContains the error value\nContains the success value\nAlias for Result&lt;T, LbFactoryError&gt;\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInternal function to set a hooks contract to the pair\nFunction to add an asset to the whitelist of quote assets\nCreates a liquidity bin LbPair for token_x and token_y.\nHandles the reply from instantiating the new LbPair.\nFunction to force the decay of the volatility accumulator …\nFunction to remove the hooks contract from the pair. Needs …\nRemove the preset linked to a bin step. Needs to be called …\nFunction to remove an asset from the whitelist of quote …\nFunction to set the fee parameters of a LbPair. Needs to …\nFunction to set the recipient of the fees. This address …\nFunction to set the flash loan fee. Needs to be called by …\nFunction to set the hooks parameters of a pair. Needs to …\nFunction to set whether the pair is ignored or not for …\nSet the LbPair implementation details.\nSet the LbToken implementation details.\nSets the preset parameters of a bin step Needs to be …\nSets if the preset is open or not to be used by users. …\nReturns the LBPairInformation if it exists, if not, then …\nFunction to sort 2 tokens in ascending order.\nReturns the list of available bin steps with a preset.\nReturns all the LbPair of a pair of tokens.\nGet the protocol fee recipient.\nGet the fee for flash loans, in 1e18.\nReturns the LbPair created at the given index.\nGet the code ID and hash of the LbPair implementation.\nReturns the LbPairInformation if it exists, if not, then …\nGet the code ID and hash of the LbToken implementation.\nGet the maximum fee percentage for flashLoans.\nGet the minimum bin step a pair can have.\nReturns the number of LbPairs created.\nReturns the number of quote assets whitelisted.\nReturns the list of open bin steps.\nReturns the different parameters of the preset.\nReturns the quote asset whitelisted at the given index.\nReturns whether a token is a quote asset (true) or not …\nMapping from a (tokenA, tokenB) to a set of available bin …\nMapping from a (tokenA, tokenB, binStep) to a LBPair. The …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")