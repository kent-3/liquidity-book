searchState.loadedDescShard("lb_router", 0, "Liquidity Book Router\nContains the error value\nContains the success value\nAlias for Result&lt;T, LbRouterError&gt;\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nHelper function to add liquidity.\nHelper function to return the amounts in.\nHelper function to return the address of the LBPair.\nHelper function to return the address of the pair (v1 or …\nHelper function to return a list of pairs.\nHelper function to remove liquidity.\nHelper function to transfer tokens to <code>to</code>.\nHelper function to transfer tokens from <code>from</code> to <code>to</code>.\nHelper function to transfer NATIVE to <code>to</code>.\nHelper function to swap exact tokens for tokens.\nHelper function to swap tokens for exact tokens\nHelper function to deposit and transfer WNative to <code>to</code>.\nHelper function to withdraw and transfer WNative to <code>to</code>.\nAdd liquidity while performing safety checks.\nAdd liquidity with NATIVE while performing safety checks.\nCreate a liquidity bin LBPair for token_x and token_y …\nRemove liquidity while performing safety checks.\nRemove NATIVE liquidity while performing safety checks.\nSwaps exact NATIVE for tokens while performing safety …\nSwaps exact tokens for NATIVE while performing safety …\nSwaps exact tokens for tokens while performing safety …\nSwaps NATIVE for exact tokens while performing safety …\nSwaps tokens for exact NATIVE while performing safety …\nSwaps tokens for exact tokens while performing safety …\nUnstuck tokens that are sent to this contract by mistake.\nUnstuck LBTokens that are sent to this contract by mistake.\nGet the factory address.\nReturns the approximate id corresponding to the inputted …\nReturns the price corresponding to the inputted id.\nSimulate a swap in.\nSimulate a swap out.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")