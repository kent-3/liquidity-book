name: Integration Tests

on:
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]
  workflow_dispatch

jobs:
  tests:
    name: ${{ matrix.make.name }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        rust: [ 1.69.0 ]
        make:
          - name: Run integration tests
            task: "npx ts-node tests/integration.ts"
        include:
          - os: ubuntu-latest
            sccache-path: /home/runner/.cache/sccache

    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      RUSTV: ${{ matrix.rust }}
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: ${{ matrix.sccache-path }}
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out

    services:
      secretdev:
        image: ghcr.io/scrtlabs/localsecret:v1.8.0
        ports:
          - 5000:5000
          - 9091:9091
          - 1317:1317

    steps:
      - uses: actions/checkout@v3
      - name: Install sccache
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: v0.4.2
        run: |
          SCCACHE_FILE="sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl"
          mkdir -p "$HOME/.local/bin"
          curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f "$SCCACHE_FILE/sccache" "$HOME/.local/bin/sccache"
          chmod +x "$HOME/.local/bin/sccache"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
      - name: Install dependencies
        run: npm --prefix tests/ install
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.69.0
      - name: Add wasm toolchain
        run: |
          rustup target add wasm32-unknown-unknown
      - name: Cache cargo registry
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Save sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: ${{ matrix.sccache-path }}
          key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-sccache-
      - name: Start sccache server
        run: sccache --start-server
      # - name: Compile code
      #   run: make build-mainnet
      - name: ${{ matrix.make.name }}
        run: ${{ matrix.make.task }}
      - name: Print sccache stats
        run: sccache --show-stats
      - name: Stop sccache server
        run: sccache --stop-server || true
